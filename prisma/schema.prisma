generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  client
  seller
  admin
}

model users {
  id            String   @id @default(uuid())
  full_name     String
  email         String   @unique
  phone_number  String?
  password_hash String
  created_at    DateTime @default(now())
  role          UserRole @default(client)
  seller        sellers?
  orders        orders[]
  testimonials  testimonials[]
}

model sellers {
  id             String   @id @default(uuid())
  user_id        String?  @unique
  company_name   String?
  country        String?
  is_approved    Boolean  @default(false)
  is_company     Boolean  @default(false)
  email          String?
  phone_number   String?

  user           users?   @relation(fields: [user_id], references: [id])
  vehicles       vehicles[]
}

model vehicles {
  id                String         @id @default(uuid())
  description       String
  brand             String
  model             String
  price             Float
  country_of_origin String
  status            String         @default("available")
  seller_id         String
  year              Int

  seller            sellers        @relation(fields: [seller_id], references: [id])
  images            VehicleImage[]
  orders            orders[]
}

model orders {
  id              String   @id @default(uuid())
  user_id         String
  vehicle_id      String
  estimated_total Float
  status          String   @default("pending")
  created_at      DateTime @default(now())

  user            users    @relation(fields: [user_id], references: [id])
  vehicle         vehicles @relation(fields: [vehicle_id], references: [id])
  tracking        order_tracking[]
}

model order_tracking {
  id         String   @id @default(uuid())
  order_id   String
  status     String
  updated_at DateTime @default(now())

  order      orders   @relation(fields: [order_id], references: [id])
}

model testimonials {
  id         String   @id @default(uuid())
  user_id    String
  message    String
  rating     Int
  created_at DateTime @default(now())

  user       users    @relation(fields: [user_id], references: [id])
}

model VehicleImage {
  id        String   @id @default(uuid())
  url       String
  vehicleId String

  vehicle   vehicles @relation(fields: [vehicleId], references: [id])
}
